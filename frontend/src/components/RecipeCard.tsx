import React, { useState, useEffect } from "react";
import { Grid, Card, Image, List, Segment } from "semantic-ui-react";
import RecipeImage from "./ReceipeImage";

import Recipe from "../models/recipe";
import User from "../models/user";
import axios from "axios";

interface RecipeCardProps {
    recipe: Recipe;
    token: string;
}

const RecipeCard: React.FC<RecipeCardProps> = ({ recipe, token }) => {

    const [user, setUser] = useState<User | null>(null);

    useEffect(() => {
        async function fetchUser() {
            try {
                const response = await axios.get<User>(`/api/user/${recipe.author}`, {
                    headers: {
                        Authorization: `Bearer ${token}`, // Replace this with your token or a method to get the token
                    },
                });
                setUser(response.data);
            } catch (error) {
                console.error("Error fetching user:", error);
            }
        }

        fetchUser();
    }, [recipe.author, token]);

    return (
        <div className="card-div">
          <Card fluid className="inner-card">
            <div className="card-content">
              <div className="image-wrapper">
                <RecipeImage />
              </div>
              <div className="content-wrapper">
                <Grid>
                  <Grid.Column floated="right" width={5}>
                    <div className="user-field">
                      <span>{user?.username}</span>
                      <Image src={user?.picture} avatar />
                    </div>
                  </Grid.Column>
                </Grid>
                <Card.Header className="title">{recipe.title}</Card.Header>
                <Card.Description>
                  <h4>Ingredients</h4>
                  <List>
                    {recipe.ingredients.map((ingredient) => (
                      <List.Item className="list-item">{ingredient}</List.Item>
                    ))}
                  </List>
                  <h4>Directions</h4>
                  <List>
                    {recipe.directions.map((direction, index) => (
                      <List.Item>
                        <b>Step {index + 1}</b> : {direction}
                      </List.Item>
                    ))}
                  </List>
                </Card.Description>
              </div>
            </div>
            {recipe.generatedByNLP ? (
              <Card.Meta>
                <span>Generated by AI </span>
              </Card.Meta>
            ) : (
              <Card.Meta>
                <span>Created by {user?.username}</span>
              </Card.Meta>
            )}
          </Card>
        </div>
      );
    };
export default RecipeCard;
